[
  {
    "code": "%1$s.setClass(getApplicationContext(), %3$s.class);\r\nActivityOptions %1$sOp \u003d ActivityOptions.makeCustomAnimation(%2$s.this, R.anim.fade_in, R.anim.fade_out);\nstartActivity(%1$s, %1$sOp.toBundle());\r",
    "imports": "\n",
    "color": "#FF381E72",
    "name": "Fade in \u0026 Out Intent Animation",
    "typeName": "",
    "palette": "9",
    "type": " ",
    "spec": "Fade in \u0026 Out %m.intent Activity %m.activity Go Activity %m.activity "
  },
  {
    "code": "%1$s.setClass(getApplicationContext(), %3$s.class);\n%1$s.putExtra(%4$s, %5$s);\r\nActivityOptions %1$sOp \u003d ActivityOptions.makeCustomAnimation(%2$s.this, R.anim.fade_in, R.anim.fade_out);\nstartActivity(%1$s, %1$sOp.toBundle());\r",
    "imports": "",
    "color": "#381E72",
    "name": "Intent Animation With Kry",
    "typeName": "",
    "palette": "9",
    "type": " ",
    "spec": "Fade in \u0026 Out %m.intent Activity %m.activity Go Activity %m.activity  putExtra key %s value %s "
  },
  {
    "code": "",
    "color": "#381E72",
    "name": "search methods",
    "typeName": "",
    "palette": "9",
    "type": "h",
    "spec": "search methods"
  },
  {
    "code": "%1$s.addListenerForSingleValueEvent(new ValueEventListener() {\n    @Override\n    public void onDataChange(DataSnapshot _dataSnapshot) {\n        %2$s \u003d new ArrayList\u003c\u003e();\n        GenericTypeIndicator\u003cHashMap\u003cString, Object\u003e\u003e _ind \u003d new GenericTypeIndicator\u003cHashMap\u003cString, Object\u003e\u003e() {};\n\n        for (DataSnapshot _data : _dataSnapshot.getChildren()) {\n            HashMap\u003cString, Object\u003e _map \u003d _data.getValue(_ind);\n            if (_map !\u003d null) %2$s.add(_map);\n        }\n\n        if (%4$s.length() \u003e 0) {\n            %2$s.removeIf(item -\u003e \n                !item.containsKey(%3$s) || \n                !item.get(%3$s).toString().toLowerCase().contains(%4$s.toLowerCase())\n            );\n        }\n        %5$s\n    }\n\n    @Override\n    public void onCancelled(DatabaseError _databaseError) {\n        %6$s\n    }\n});",
    "imports": "",
    "color": "#381E72",
    "name": "Firebase Searching Method Without Status",
    "typeName": "",
    "palette": "9",
    "type": "e",
    "spec": "if FS %m.FirebaseDB  with listmap %m.listMap and search with key%s  to find%s and dislplays on",
    "spec2": "else database error"
  },
  {
    "code": "%1$s.addListenerForSingleValueEvent(new ValueEventListener() {\n    @Override\n    public void onDataChange(DataSnapshot _dataSnapshot) {\n        %2$s \u003d new ArrayList\u003c\u003e();\n        GenericTypeIndicator\u003cHashMap\u003cString, Object\u003e\u003e _ind \u003d new GenericTypeIndicator\u003cHashMap\u003cString, Object\u003e\u003e() {};\n\n        for (DataSnapshot _data : _dataSnapshot.getChildren()) {\n            HashMap\u003cString, Object\u003e _map \u003d _data.getValue(_ind);\n            if (_map !\u003d null) %2$s.add(_map);\n        }\n\n        if (%4$s.length() \u003e 0) {\n            %2$s.removeIf(item -\u003e \n                !item.containsKey(%3$s) || \n                !item.get(%3$s).toString().toLowerCase().contains(%4$s.toLowerCase())\n            );\n        }\n\n        boolean isListEmpty \u003d %2$s.isEmpty();\n        %5$s.setVisibility(isListEmpty ? View.VISIBLE : View.GONE);\n        %6$s.setVisibility(isListEmpty ? View.GONE : View.VISIBLE);\n\n        if (!isListEmpty) {\n            %7$s\n        }\n    }\n\n    @Override\n    public void onCancelled(DatabaseError _databaseError) {\n%8$s\n    }\n});",
    "imports": "",
    "color": "#381E72",
    "name": "Firebase Searching Method With Status",
    "typeName": "",
    "palette": "9",
    "type": "e",
    "spec": "if FS With Status %m.FirebaseDB  with listmap %m.listMap and search with key%s  to find%s Finded Status Textview id %m.textview Result Listview id %m.view  and dislplays on",
    "spec2": "else database error"
  },
  {
    "code": "%1$s.addListenerForSingleValueEvent(new ValueEventListener() {\n    @Override\n    public void onDataChange(DataSnapshot _dataSnapshot) {\n        %2$s \u003d new ArrayList\u003c\u003e();\n        GenericTypeIndicator\u003cHashMap\u003cString, Object\u003e\u003e _ind \u003d new GenericTypeIndicator\u003cHashMap\u003cString, Object\u003e\u003e() {};\n        String activityType \u003d getIntent().getStringExtra(%7$s);\n\n        for (DataSnapshot _data : _dataSnapshot.getChildren()) {\n            HashMap\u003cString, Object\u003e _map \u003d _data.getValue(_ind);\n            if (_map !\u003d null \u0026\u0026 _map.containsKey(%9$s)) {\n                if (%8$s.equals(activityType) \u0026\u0026 \n                    %10$s.equals(_map.get(%9$s).toString())) {\n                    %2$s.add(_map);\n                }\n            }\n        }\n        if (%4$s.trim().length() \u003e 0) {\n            %2$s.removeIf(item -\u003e \n                !item.containsKey(%3$s) || \n                !item.get(%3$s).toString().toLowerCase().contains(%4$s.trim().toLowerCase())\n            );\n        }\n\n        boolean isListEmpty \u003d %2$s.isEmpty();\n        %5$s.setVisibility(isListEmpty ? View.VISIBLE : View.GONE);\n        %6$s.setVisibility(isListEmpty ? View.GONE : View.VISIBLE);\n\n        if (!isListEmpty) {\n            %11$s\n        }\n    }\n\n    @Override\n    public void onCancelled(DatabaseError _databaseError) {\n        %12$s\n    }\n});",
    "imports": "",
    "color": "#381E72",
    "name": "Firebase Search With Status + Filter+int",
    "typeName": "",
    "palette": "9",
    "type": "e",
    "spec": "if FS With Status + intent filter + child filter %m.FirebaseDB  with listmap %m.listMap and search with key%s  to find%s Finded Status Textview id %m.textview Result Listview id %m.view Intent extraKey %s Intent equalsValue %s ChildKey %s ChildKey equalsValue %s and dislplays on",
    "spec2": "else database error"
  },
  {
    "code": "ObjectAnimator scaleX \u003d ObjectAnimator.ofFloat(%1$s, View.SCALE_X, 0.3f, 1f);\nObjectAnimator scaleY \u003d ObjectAnimator.ofFloat(%1$s, View.SCALE_Y, 0.3f, 1f);\nAnimatorSet animatorSet \u003d new AnimatorSet();\nanimatorSet.playTogether(scaleX, scaleY);\nanimatorSet.setDuration(400);\nanimatorSet.start();",
    "imports": "",
    "color": "#381E72",
    "name": "recyclerView, ListView, \u0026 GridView Anim",
    "typeName": "",
    "palette": "9",
    "type": " ",
    "spec": "recyclerView, ListView, \u0026 GridView Anim %m.view "
  },
  {
    "code": "%1$s.startRequestNetwork(RequestNetworkController.GET, %4$s + \"/rest/v1/\" + %2$s + \"?apikey\u003d\" + %3$s, %5$s, _%1$s_request_listener);",
    "imports": "",
    "color": "#4CAF50",
    "name": "Get Data Using Table Key",
    "typeName": "",
    "palette": "14",
    "type": " ",
    "spec": "Get Data Using Request Network %m.RequestNetwork Table Name %s  Api Key %s Project Url %s Tag %s "
  },
  {
    "code": "RequestNetwork %1$s \u003d new RequestNetwork(%6$s.this);\n%1$s.startRequestNetwork(\n    RequestNetworkController.GET, \n    %4$s + \"/rest/v1/\" + %2$s + \"?apikey\u003d\" + %3$s, \n    %5$s, \n    new RequestNetwork.RequestListener() {\n        @Override\n        public void onResponse(String tag, String response, HashMap\u003cString, Object\u003e responseHeaders) {\n            %7$s\n        }\n\n        @Override\n        public void onErrorResponse(String tag, String message) {\n            %8$s\n        }\n    }\n);",
    "imports": "",
    "color": "#4CAF50",
    "name": "Get data using table cable + handle",
    "typeName": "",
    "palette": "14",
    "type": "e",
    "spec": "Get Data Using Request Network + Direct handle - Request network name %s.inputOnly  Table Name %s  Api Key %s Project Url %s Tag %s content %m.activity",
    "spec2": "onResponseError"
  },
  {
    "code": "%1$s.setHeaders(%2$s); %1$s.setParams(%3$s, RequestNetworkController.REQUEST_PARAM); %1$s.startRequestNetwork(RequestNetworkController.POST, %5$s + \"/rest/v1/\" + %4$s, %6$s, _%1$s_request_listener);",
    "imports": "",
    "color": "#4CAF50",
    "name": "Insert Data",
    "typeName": "",
    "palette": "14",
    "type": " ",
    "spec": "Inset Data Using RequestNetwork %m.RequestNetwork  Headers Map %m.varMap  Map Value %m.varMap Table Name %s Project Url %s Tag %s"
  },
  {
    "code": "%1$s \u003d new HashMap\u003c\u003e();\n%2$s \u003d new HashMap\u003c\u003e();",
    "imports": "",
    "color": "#4CAF50",
    "name": "Connect Map",
    "typeName": "",
    "palette": "14",
    "type": " ",
    "spec": "Connect Value Hash Map %m.varMap  With Headers Hash Map %m.varMap "
  },
  {
    "code": "%1$s.put(\"apikey\", %2$s);\n%1$s.put(\"Content-Type\", \"application/json\");",
    "imports": "",
    "color": "#4CAF50",
    "name": "Supabase Connection",
    "typeName": "",
    "palette": "14",
    "type": " ",
    "spec": "Connect With Supabase Header Map %m.varMap Api Key %s "
  },
  {
    "code": "// Start: %1$s\n%2$s\n//End: %1$s",
    "imports": "",
    "color": "#381E72",
    "name": "Lesson introduction ",
    "typeName": "",
    "palette": "9",
    "type": "c",
    "spec": "This Part Is: %s"
  },
  {
    "code": "",
    "color": "#FF5722",
    "name": "Credit",
    "typeName": "",
    "palette": "10",
    "type": "h",
    "spec": "M3 Alert Dialog Builder. By Faster Software Developer"
  },
  {
    "code": "MaterialAlertDialogBuilder %1$s \u003d new MaterialAlertDialogBuilder(%2$s.this);\n%4$s\n%1$s.setCancelable(%3$s);\n%1$s.create().show();",
    "imports": "com.google.android.material.dialog.MaterialAlertDialogBuilder",
    "color": "#FF5722",
    "name": "M3 Alert Dialog",
    "typeName": "",
    "palette": "10",
    "type": "c",
    "spec": "M3 Alert Dialog %m.Dialog Activity %m.activity Cancelable %b "
  },
  {
    "code": "%1$s.setTitle(%2$s);",
    "color": "#FF5722",
    "name": "Dialog Title",
    "typeName": "",
    "palette": "10",
    "type": " ",
    "spec": "M3 %m.Dialog Dialog Title %s "
  },
  {
    "code": "%1$s.setMessage(%2$s);",
    "color": "#FF5722",
    "name": "Dialog Massage",
    "typeName": "",
    "palette": "10",
    "type": " ",
    "spec": "M3 %m.Dialog Dialog Massage %s "
  },
  {
    "code": "%1$s.setIcon(R.drawable.%2$s);",
    "imports": "",
    "color": "#FF5722",
    "name": "Dialog Icon",
    "typeName": "",
    "palette": "10",
    "type": " ",
    "spec": "M3 %m.Dialog Dialog Icon %m.BackgroundImage"
  },
  {
    "code": "View %2$s \u003d LayoutInflater.from(%3$s.this).inflate(R.layout.%4$s, null);\n%1$s.setView(%2$s);\r",
    "imports": "",
    "color": "#FF5722",
    "name": "M3 Custom Dialog",
    "typeName": "",
    "palette": "10",
    "type": " ",
    "spec": "M3 Dialog %m.Dialog Custom View Name %s.inputOnly  Activity %m.activity Layout %m.layout "
  },
  {
    "code": "final %1$s %3$s \u003d %2$s.findViewById(R.id.%4$s);",
    "imports": "",
    "color": "#FF5722",
    "name": "View In Dialog",
    "typeName": "",
    "palette": "10",
    "type": " ",
    "spec": "View %m.typeview CustomView Name %s.inputOnly View Id %s.inputOnly FindById %s.inputOnly "
  },
  {
    "code": "%2$s.setFocusableInTouchMode(%1$s);",
    "imports": "",
    "color": "#FF5722",
    "name": "Edittext Focusable In Touch Mode",
    "typeName": "",
    "palette": "10",
    "type": " ",
    "spec": "Edittext Focusable In Touch Mode %b Edittext Id %s.inputOnly  "
  },
  {
    "code": "%1$s.setPositiveButton(%2$s, new DialogInterface.OnClickListener() {\n    @Override\n    public void onClick(DialogInterface _dialog, int _which) {\n        %3$s\n    }\n});",
    "color": "#FF5722",
    "name": "M3 Positive Button",
    "typeName": "",
    "palette": "10",
    "type": "c",
    "spec": "Positive Button %m.Dialog Button Name%s "
  },
  {
    "code": "%1$s.setNegativeButton(%2$s, new DialogInterface.OnClickListener() {\n    @Override\n    public void onClick(DialogInterface _dialog, int _which) {\n        %3$s\n    }\n});",
    "color": "#FF5722",
    "name": "M3 Negative Button",
    "typeName": "",
    "palette": "10",
    "type": "c",
    "spec": "Negative Button %m.Dialog Button Name%s "
  },
  {
    "code": "%1$s.setNeutralButton(%2$s, new DialogInterface.OnClickListener() {\n    @Override\n    public void onClick(DialogInterface _dialog, int _which) {\n        %3$s\n    }\n});",
    "imports": "",
    "color": "#FF5722",
    "name": "M3 Neutral Button",
    "typeName": "",
    "palette": "10",
    "type": "c",
    "spec": "Neutral Button %m.Dialog Button Name%s "
  },
  {
    "code": "%1$s.setOnClickListener(%2$s -\u003e {\n%3$s\n});",
    "color": "#FF5722",
    "name": "Custom Dialog Click listeners",
    "typeName": "Custom Dialog Click listeners",
    "palette": "10",
    "type": "c",
    "spec": "Custom Dialog Click listeners %m.view ClickOn %s.inputOnly "
  },
  {
    "code": "",
    "color": "#FF006492",
    "name": "Block Credit",
    "typeName": "",
    "palette": "10",
    "type": "h",
    "spec": "M3 BottomSheet By Faster Software Developer"
  },
  {
    "code": "final\ncom.google.android.material.bottomsheet.BottomSheetDialog %1$s \u003d new com.google.android.material.bottomsheet.BottomSheetDialog(%2$s.this);\nView %3$s \u003d getLayoutInflater().inflate(R.layout.%4$s, null);\n%1$s.setContentView(%3$s);\n%1$s.getWindow().getDecorView().setBackgroundColor(0);\n%6$s\n%1$s.setCancelable(%5$s);\n%1$s.show();",
    "imports": "com.google.android.material.bottomsheet.BottomSheetDialog",
    "color": "#FF006492",
    "name": "M3 Bottom Sheet",
    "typeName": "",
    "palette": "10",
    "type": "c",
    "spec": "M3 Bottom Sheet Name %s.inputOnly Activity %m.activity CustomView Name %s.inputOnly Layout %m.layout Cancelable %b "
  },
  {
    "code": "%2$s.setFocusableInTouchMode(%1$s);",
    "color": "#FF006492",
    "name": "Sheet Edittext Focusable In Touch Mode",
    "typeName": "",
    "palette": "10",
    "type": " ",
    "spec": "Sheet Edittext Focusable In Touch Mode %b Edittext Id %s.inputOnly  "
  },
  {
    "code": "final %1$s %3$s \u003d %2$s.findViewById(R.id.%4$s);",
    "imports": "",
    "color": "#FF006492",
    "name": "View In Bottom Sheet Dialog",
    "typeName": "",
    "palette": "10",
    "type": " ",
    "spec": "View %m.typeview CustomView Name %s.inputOnly View Id %s.inputOnly FindById %s.inputOnly "
  },
  {
    "code": "%1$s.dismiss();",
    "color": "#FF006492",
    "name": "dialog Exit",
    "typeName": "",
    "palette": "10",
    "type": " ",
    "spec": "Dialog Exit - Dialog Name %s.inputOnly"
  },
  {
    "code": "%1$s.isEmpty()",
    "imports": "",
    "color": "#381E72",
    "name": "IsEmpty",
    "typeName": "",
    "palette": "9",
    "type": "b",
    "spec": "%s IsEmpty"
  },
  {
    "code": "%1$s.put(%2$s, %3$s);",
    "color": "#4CAF50",
    "name": "Map",
    "typeName": "",
    "palette": "14",
    "type": " ",
    "spec": "Value Map %m.varMap Put key %s Value %s "
  },
  {
    "code": "",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "Update Supabase Data",
    "typeName": "",
    "palette": "14",
    "type": "h",
    "spec": "update supabase data"
  },
  {
    "code": "OkHttpClient client \u003d new OkHttpClient();\nRequest request \u003d new Request.Builder()\n    .url(%5$s + \"/rest/v1/\" + %2$s + \"?%3$s\u003deq.\" + %4$s)\n    .addHeader(\"apikey\", %6$s)\n    .patch(RequestBody.create(\n        MediaType.parse(\"application/json; charset\u003dutf-8\"),\n        new Gson().toJson(%1$s)\n    ))\n    .build();\nclient.newCall(request).enqueue(new Callback() {",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "UpdateSupabaseDataBlock",
    "typeName": "",
    "palette": "14",
    "type": " ",
    "spec": "Update Supabase Data Set Data %m.varMap Table name %s Column primary key %s.inputOnly Column primary value %s Project url %s API key %s ",
    "spec2": "Else"
  },
  {
    "code": "    @Override\n    public void onFailure(Call call, IOException e) {\n        final String errorMessage \u003d e.getMessage();\n        new Handler(Looper.getMainLooper()).post(new Runnable() {\n            @Override\n            public void run() {\n                %1$s\n            }\n        });\n    }",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPFailedRequestResponse",
    "typeName": "",
    "palette": "14",
    "type": "c",
    "spec": "Failed Request Response"
  },
  {
    "code": "    @Override\n    public void onResponse(Call call, Response response) throws IOException {\n        final String responseMessage \u003d response.body().string(); \n        if (response.isSuccessful()) {\n            new Handler(Looper.getMainLooper()).post(new Runnable() {\n                @Override\n                public void run() {\n                    %1$s\n                }\n            });\n        } else {\n            new Handler(Looper.getMainLooper()).post(new Runnable() {",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPOnResponseSuccessful",
    "typeName": "",
    "palette": "14",
    "type": "c",
    "spec": "On Response Successful"
  },
  {
    "code": "                @Override\n                public void run() {\n                    %1$s\n                }\n            });\n        }\n    }\n});",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPOnFailedResponse",
    "typeName": "",
    "palette": "14",
    "type": "c",
    "spec": "On Failed Response"
  },
  {
    "code": "\"{\" + \"\\\"\" + %1$s + \"\\\":\\\"\" + %2$s + \"\\\"\" + \"}\"",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPone",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "key%s value%s "
  },
  {
    "code": "\"{\" + \"\\\"\" + %1$s + \"\\\":\\\"\" + %2$s + \"\\\",\" + \"\\\"\" + %3$s + \"\\\":\\\"\" + %4$s + \"\\\"}\"",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPtwo",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "key%s value%s key%s value%s "
  },
  {
    "code": "\"{\\\"\" + %1$s + \"\\\":\\\"\" + %2$s + \"\\\",\" + \"\\\"\" + %3$s + \"\\\":\\\"\" + %4$s + \"\\\",\" + \"\\\"\" + %5$s + \"\\\":\\\"\" + %6$s + \"\\\"}\"",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPthree",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "key%s value%s key%s value%s key%s value%s "
  },
  {
    "code": "\"{\" + \"\\\"\" + %1$s + \"\\\":\\\"\" + %2$s + \"\\\",\" + \"\\\"\" + %3$s + \"\\\":\\\"\" + %4$s + \"\\\",\" + \"\\\"\" + %5$s + \"\\\":\\\"\" + %6$s + \"\\\",\" + \"\\\"\" + %7$s + \"\\\":\\\"\" + %8$s + \"\\\"}\"",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPfour",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "key%s value%s key%s value%s key%s value%s key%s value%s "
  },
  {
    "code": "\"{\" + \"\\\"\" + %1$s + \"\\\":\\\"\" + %2$s + \"\\\",\\\"\" + %3$s + \"\\\":\\\"\" + %4$s + \"\\\",\\\"\" + %5$s + \"\\\":\\\"\" + %6$s + \"\\\",\\\"\" + %7$s + \"\\\":\\\"\" + %8$s + \"\\\",\\\"\" + %9$s + \"\\\":\\\"\" + %10$s + \"\\\"}\"",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPfive",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "key%s value%s key%s value%s key%s value%s key%s value%s key%s value%s "
  },
  {
    "code": "\"{\" + \"\\\"\" + %1$s + \"\\\":\\\"\" + %2$s + \"\\\",\\\"\" + %3$s + \"\\\":\\\"\" + %4$s + \"\\\",\\\"\" + %5$s + \"\\\":\\\"\" + %6$s + \"\\\",\\\"\" + %7$s + \"\\\":\\\"\" + %8$s + \"\\\",\\\"\" + %9$s + \"\\\":\\\"\" + %10$s + \"\\\",\\\"\" + %11$s + \"\\\":\\\"\" + %12$s + \"\\\"}\"",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPsix",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "key%s value%s key%s value%s key%s value%s key%s value%s key%s value%s key%s value%s "
  },
  {
    "code": "\"{\" + \"\\\"\" + %1$s + \"\\\":\\\"\" + %2$s + \"\\\",\\\"\" + %3$s + \"\\\":\\\"\" + %4$s + \"\\\",\\\"\" + %5$s + \"\\\":\\\"\" + %6$s + \"\\\",\\\"\" + %7$s + \"\\\":\\\"\" + %8$s + \"\\\",\\\"\" + %9$s + \"\\\":\\\"\" + %10$s + \"\\\",\\\"\" + %11$s + \"\\\":\\\"\" + %12$s + \"\\\",\\\"\" + %13$s + \"\\\":\\\"\" + %14$s + \"\\\"}\"",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPseven",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "key%s value%s key%s value%s key%s value%s key%s value%s key%s value%s key%s value%s  key%s value%s "
  },
  {
    "code": "\"{\" + \"\\\"\" + %1$s + \"\\\":\\\"\" + %2$s + \"\\\",\\\"\" + %3$s + \"\\\":\\\"\" + %4$s + \"\\\",\\\"\" + %5$s + \"\\\":\\\"\" + %6$s + \"\\\",\\\"\" + %7$s + \"\\\":\\\"\" + %8$s + \"\\\",\\\"\" + %9$s + \"\\\":\\\"\" + %10$s + \"\\\",\\\"\" + %11$s + \"\\\":\\\"\" + %12$s + \"\\\",\\\"\" + %13$s + \"\\\":\\\"\" + %14$s + \"\\\",\\\"\" + %15$s + \"\\\":\\\"\" + %16$s + \"\\\"}\"",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPeight",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "key%s value%s key%s value%s key%s value%s key%s value%s key%s value%s key%s value%s  key%s value%s key%s value%s "
  },
  {
    "code": "/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"public class %1$s extends AppCompatActivity {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003eadd\n\nprivate FasterM3BottomSheetLoader %2$s;\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/",
    "imports": "",
    "color": "#FF9800",
    "name": "FMBSD create dialog private",
    "typeName": "",
    "palette": "11",
    "type": " ",
    "spec": "FMBSD create private dialog - activity %m.activity dialog name %s.inputOnly"
  },
  {
    "code": "FasterM3BottomSheetLoader %1$s \u003d new FasterM3BottomSheetLoader(%2$s.this);",
    "imports": "",
    "color": "#FF9800",
    "name": "FMBSD create bottom sheet",
    "typeName": "",
    "palette": "11",
    "type": " ",
    "spec": "FMBSD bottom sheet name %s.inputOnly activity %m.activity create dialog"
  },
  {
    "code": "%1$s \u003d new FasterM3BottomSheetLoader(%2$s.this);",
    "imports": "",
    "color": "#FF9800",
    "name": "FMBSD create bottom sheet using private",
    "typeName": "",
    "palette": "11",
    "type": " ",
    "spec": "FMBSD bottom sheet name %s.inputOnly activity %m.activity create dialog using private"
  },
  {
    "code": "%1$s.setOnOutsideClickListener(() -\u003e {\n%2$s\n});",
    "imports": "",
    "color": "#FF9800",
    "name": "FMBSD setOnOutsideClickListener",
    "typeName": "",
    "palette": "11",
    "type": "c",
    "spec": "FMBSD setOnOutsideClickListener - dialog name %s.inputOnly "
  },
  {
    "code": "%1$s.setCancelableOnOutsideClick(%2$s);",
    "imports": "",
    "color": "#FF9800",
    "name": "FMBSD cancelable",
    "typeName": "",
    "palette": "11",
    "type": " ",
    "spec": "FMBSD - dialog name %s.inputOnly setCancelableOnOutsideClick %b"
  },
  {
    "code": "%1$s.show(%2$s);",
    "color": "#FF9800",
    "name": "FMBSD show dialog",
    "typeName": "",
    "palette": "11",
    "type": " ",
    "spec": "FMBSD dialog name %s.inputOnly show dialog massage %s "
  },
  {
    "code": "%1$s.resume();",
    "imports": "",
    "color": "#FF9800",
    "name": "FMBSD resume dialog",
    "typeName": "",
    "palette": "11",
    "type": " ",
    "spec": "FMBSD dialog name %s.inputOnly FMBSD resume dialog"
  },
  {
    "code": "%1$s.updateMessage(%2$s);",
    "color": "#FF9800",
    "name": "FMBSD update dialog massage",
    "typeName": "",
    "palette": "11",
    "type": " ",
    "spec": "FMBSD dialog name %s.inputOnly  FMBSD update dialog massage %s "
  },
  {
    "code": "%1$s.dismiss();",
    "color": "#FF9800",
    "name": "FMBSD dismiss dialog",
    "typeName": "",
    "palette": "11",
    "type": " ",
    "spec": "FMBSD dialog name %s.inputOnly dismiss dialog"
  },
  {
    "code": "",
    "imports": "",
    "color": "#FF9C27B0",
    "name": "credit",
    "typeName": "",
    "palette": "15",
    "type": "h",
    "spec": "blocks created by faster software developer"
  },
  {
    "code": "try {\n  OkHttpClient client \u003d new OkHttpClient();\n\n    JSONObject %3$s \u003d new JSONObject();\n    %3$s.put(\"email\", %1$s);\n    %3$s.put(\"password\", %2$s);\n\n    RequestBody body \u003d RequestBody.create(MediaType.parse(\"application/json\"), %3$s.toString());\n\n    Request request \u003d new Request.Builder()\n            .url(%4$s + \"/auth/v1/signup\")\n            .addHeader(\"apikey\", %5$s)\n            .addHeader(\"Content-Type\", \"application/json\")\n            .post(body)\n            .build();\n\n    client.newCall(request).enqueue(new Callback() {\n%6$s\n} catch (Exception e) {\n%7$s\n}",
    "imports": "",
    "color": "#FF9C27B0",
    "name": "FSA sign up with otp",
    "typeName": "",
    "palette": "15",
    "type": "e",
    "spec": "FSA Supabase Signup User Email %s Password %s set map %m.varMap Project url %s  Api key %s",
    "spec2": "catch errors"
  },
  {
    "code": "try {\nOkHttpClient client \u003d new OkHttpClient();\n\n    JSONObject %3$s \u003d new JSONObject();\n    %3$s.put(\"email\", %1$s);\n    %3$s.put(\"password\", %2$s);\n\n    RequestBody body \u003d RequestBody.create(MediaType.parse(\"application/json\"), %3$s.toString());\n\n    Request request \u003d new Request.Builder()\n            .url(%4$s + \"/auth/v1/token?grant_type\u003dpassword\")\n            .addHeader(\"apikey\", %5$s)\n            .addHeader(\"Content-Type\", \"application/json\")\n            .post(body)\n            .build();\n\nclient.newCall(request).enqueue(\nnew Callback() {\n%6$s\n} catch (Exception e) {\n%7$s\n}",
    "imports": "",
    "color": "#FF9C27B0",
    "name": "FSA sign in with otp",
    "typeName": "",
    "palette": "15",
    "type": "e",
    "spec": "FSA Supabase Login User Email %s Password %s set map %m.varMap Project url %s  Api key %s",
    "spec2": "catch errors"
  },
  {
    "code": "OkHttpClient client \u003d new OkHttpClient();\n\ntry {\n    JSONObject %2$s \u003d new JSONObject();\n    %2$s.put(\"email\", %1$s);\n\n    RequestBody body \u003d RequestBody.create(MediaType.parse(\"application/json\"), %2$s.toString());\n\n    Request request \u003d new Request.Builder()\n            .url(%3$s + \"/auth/v1/recover\")\n            .addHeader(\"apikey\", %4$s)\n            .addHeader(\"Content-Type\", \"application/json\")\n            .post(body)\n            .build();\n\n    client.newCall(request).enqueue(new Callback() {\n%5$s\n} catch (Exception e) {\n%6$s\n}",
    "imports": "",
    "color": "#FF9C27B0",
    "name": "FSA forget password",
    "typeName": "",
    "palette": "15",
    "type": "e",
    "spec": "FSA Forget Password User email %s set map %m.varMap Project url %s Api key %s",
    "spec2": "catch errors"
  },
  {
    "code": "try {\n    OkHttpClient client \u003d new OkHttpClient();\n\n    RequestBody body \u003d RequestBody.create(\n        MediaType.parse(\"application/json\"),\n        \"{ \\\"refresh_token\\\": \\\"\" + %1$s + \"\\\" }\"\n    );\n\n    Request request \u003d new Request.Builder()\n        .url(%2$s + \"/auth/v1/token?grant_type\u003drefresh_token\")\n        .addHeader(\"apikey\", %3$s)\n        .addHeader(\"Content-Type\", \"application/json\")\n        .post(body)\n        .build();\n\n    client.newCall(request).enqueue(new Callback() {\n%4$s\n} catch (Exception e) {\n%5$s\n}",
    "imports": "",
    "color": "#9C27B0",
    "name": "FSA create refresh token",
    "typeName": "",
    "palette": "15",
    "type": "e",
    "spec": "FSA actual refresh token %s Project url %s Api key %s ",
    "spec2": "catch errors"
  },
  {
    "code": "try {\nOkHttpClient client \u003d new OkHttpClient();\n\nRequest request \u003d new Request.Builder()\n    .url(%1$s + \"/auth/v1/logout\")\n    .addHeader(\"apikey\", %2$s) \n    .addHeader(\"Authorization\", \"Bearer \" + %3$s)\n    .post(RequestBody.create(null, \"\")) \n    .build();\n\nclient.newCall(request).enqueue(new Callback() {\n%4$s\n} catch (Exception e) {\n%5$s\n}",
    "imports": "",
    "color": "#9C27B0",
    "name": "FSA logout",
    "typeName": "",
    "palette": "15",
    "type": "e",
    "spec": "FSA logout - Project url %s Api key %s User access token %s",
    "spec2": "catch errors"
  },
  {
    "code": "try {\nOkHttpClient client \u003d new OkHttpClient();\n\n    JSONObject %4$s \u003d new JSONObject();\n    %4$s.put(\"email\", %1$s);\n    %4$s.put(\"token\", %2$s);\n    %4$s.put(\"type\", %3$s);\n\n    RequestBody body \u003d RequestBody.create(MediaType.parse(\"application/json\"), %4$s.toString());\n\n    Request request \u003d new Request.Builder()\n            .url(%5$s + \"/auth/v1/verify\")\n            .addHeader(\"apikey\", %6$s)\n            .addHeader(\"Content-Type\", \"application/json\")\n            .post(body)\n            .build();\n\n    client.newCall(request).enqueue(new Callback() {\n%7$s\n} catch (Exception e) {\n%8$s\n}",
    "imports": "",
    "color": "#FF9C27B0",
    "name": "FSA confirm email",
    "typeName": "",
    "palette": "15",
    "type": "e",
    "spec": "FSA Confirm Email User email %s OTP %s confirmation type %s set map %m.varMap Project url %s Api key %s ",
    "spec2": "catch errors"
  },
  {
    "code": "try {\nOkHttpClient client \u003d new OkHttpClient();\n\n    JSONObject %3$s \u003d new JSONObject();\n    %3$s.put(\"password\", %1$s);\n\n    RequestBody body \u003d RequestBody.create(MediaType.parse(\"application/json\"), %3$s.toString());\n\n    Request request \u003d new Request.Builder()\n            .url(%4$s + \"/auth/v1/admin/users/\" + %2$s)\n            .addHeader(\"apikey\", %5$s)\n            .addHeader(\"Content-Type\", \"application/json\")\n            .addHeader(\"Authorization\", \"Bearer \" + %5$s)\n            .put(body)\n            .build();\n\n    client.newCall(request).enqueue(new Callback() {\n%6$s\n} catch (Exception e) {\n%7$s\n}",
    "imports": "",
    "color": "#FF9C27B0",
    "name": "FSA rest password",
    "typeName": "",
    "palette": "15",
    "type": "e",
    "spec": "FSA Reset Password User new password %s user uid %s set map %m.varMap Project url %s  Service Role (secret) key %s ",
    "spec2": "catch errors"
  },
  {
    "code": "try {\n    OkHttpClient client \u003d new OkHttpClient();\n    \n    JSONObject %3$s \u003d new JSONObject();\n    %3$s.put(\"email\", %1$s);\n    \n    RequestBody body \u003d RequestBody.create(MediaType.parse(\"application/json\"), %3$s.toString());\n    \n    Request request \u003d new Request.Builder()\n            .url(%4$s + \"/auth/v1/admin/users/\" + %2$s)\n            .addHeader(\"apikey\", %5$s)\n            .addHeader(\"Content-Type\", \"application/json\")\n            .addHeader(\"Authorization\", \"Bearer \" + %5$s)\n            .put(body)\n            .build();\nclient.newCall(request).enqueue(new Callback() {\n%6$s\n} catch (Exception e) {\n%7$s\n}\n",
    "imports": "",
    "color": "#9C27B0",
    "name": "FSA Email change",
    "typeName": "",
    "palette": "15",
    "type": "e",
    "spec": "FSA Change Email - User new email %s User uid %s Set map %m.varMap Project url %s  Service Role (secret) key %s ",
    "spec2": ""
  },
  {
    "code": "try {\n    OkHttpClient client \u003d new OkHttpClient();\n\n    String userId \u003d %2$s;\n\n    Request request \u003d new Request.Builder()\n            .url(%3$s + \"/auth/v1/admin/users/\" + userId)\n            .addHeader(\"apikey\", %1$s)\n            .addHeader(\"Authorization\", \"Bearer \" + %1$s)\n            .delete()\n            .build();\n\nclient.newCall(request).enqueue(new Callback() {\n%4$s\n} catch (Exception e) {\n%5$s\n}",
    "color": "#9C27B0",
    "name": "FSA delete account",
    "typeName": "",
    "palette": "15",
    "type": "e",
    "spec": "FSA delete account using Service role (secret) key %s User id %s Project Url %s",
    "spec2": "Catch error"
  },
  {
    "code": "@Override\npublic void onFailure(Call call, IOException e) {\nfinal String errorMessage \u003d e.getMessage();\nrunOnUiThread(new Runnable() {\n@Override\npublic void run() {\n%1$s\n}\n});\n}",
    "imports": "",
    "color": "#FF9C27B0",
    "name": "FSA request failed",
    "typeName": "",
    "palette": "15",
    "type": "c",
    "spec": "If Request Falied"
  },
  {
    "imports": "androidx.activity.OnBackPressedCallback",
    "code": "getOnBackPressedDispatcher().addCallback(this, new OnBackPressedCallback(true) {\n@Override\npublic void handleOnBackPressed() {\n%1$s\n}\n});\r",
    "color": "#381E72",
    "name": "Androidx OnBackPressedCallback",
    "typeName": "",
    "palette": "9",
    "type": "c",
    "spec": "Androidx OnBackPressedCallback"
  },
  {
    "code": "/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"\tpublic void onClick(View _v) {\r\\n\t\t\t\tonBackPressed();\r\\n\t\t\t}\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\n\tpublic void onClick(View _v) {\r\n\t\t\t\tgetOnBackPressedDispatcher().onBackPressed();\r\n\t\t\t}\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/",
    "imports": "",
    "color": "#381E72",
    "name": "Toolbar OnBackPressedDispatcher",
    "typeName": "",
    "palette": "9",
    "type": " ",
    "spec": "Toolbar OnBackPressedDispatcher"
  },
  {
    "code": "@Override\npublic void onResponse(Call call, Response response) throws IOException {\nfinal boolean isSuccessful \u003d response.isSuccessful();\nfinal String responseBody \u003d response.body().string();\nrunOnUiThread(new Runnable() {\n@Override\npublic void run() {\nif (isSuccessful) {\n%1$s\n} else {\n%2$s\n}\n}\n});\n}\n});",
    "imports": "",
    "color": "#FF9C27B0",
    "name": "FSA request successful",
    "typeName": "",
    "palette": "15",
    "type": "e",
    "spec": "If Successful",
    "spec2": "If Failed"
  },
  {
    "code": "responseBody",
    "imports": "",
    "color": "#FF9C27B0",
    "name": "FSA response",
    "typeName": "",
    "palette": "15",
    "type": "s",
    "spec": "Response"
  },
  {
    "code": "\"{\" + \"\\\"\" + %1$s + \"\\\":\\\"\" + %2$s + \"\\\",\\\"\" + %3$s + \"\\\":\\\"\" + %4$s + \"\\\",\\\"\" + %5$s + \"\\\":\\\"\" + %6$s + \"\\\",\\\"\" + %7$s + \"\\\":\\\"\" + %8$s + \"\\\",\\\"\" + %9$s + \"\\\":\\\"\" + %10$s + \"\\\",\\\"\" + %11$s + \"\\\":\\\"\" + %12$s + \"\\\",\\\"\" + %13$s + \"\\\":\\\"\" + %14$s + \"\\\",\\\"\" + %15$s + \"\\\":\\\"\" + %16$s + \"\\\",\\\"\" + %17$s + \"\\\":\\\"\" + %18$s + \"\\\"}\"",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPnine",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "key%s value%s key%s value%s key%s value%s key%s value%s key%s value%s key%s value%s  key%s value%s key%s value%s key%s value%s "
  },
  {
    "code": "\"{\" + \"\\\"\" + %1$s + \"\\\":\\\"\" + %2$s + \"\\\",\\\"\" + %3$s + \"\\\":\\\"\" + %4$s + \"\\\",\\\"\" + %5$s + \"\\\":\\\"\" + %6$s + \"\\\",\\\"\" + %7$s + \"\\\":\\\"\" + %8$s + \"\\\",\\\"\" + %9$s + \"\\\":\\\"\" + %10$s + \"\\\",\\\"\" + %11$s + \"\\\":\\\"\" + %12$s + \"\\\",\\\"\" + %13$s + \"\\\":\\\"\" + %14$s + \"\\\",\\\"\" + %15$s + \"\\\":\\\"\" + %16$s + \"\\\",\\\"\" + %17$s + \"\\\":\\\"\" + %18$s + \"\\\",\\\"\" + %19$s + \"\\\":\\\"\" + %20$s + \"\\\"}\"",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "SPten",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "key%s value%s key%s value%s key%s value%s key%s value%s key%s value%s key%s value%s  key%s value%s key%s value%s key%s value%s  key%s value%s "
  },
  {
    "code": "",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "FSF filter",
    "typeName": "",
    "palette": "14",
    "type": "h",
    "spec": "FSF filter"
  },
  {
    "code": "%4$s \u003d new HashMap\u003c\u003e(); \n%4$s.put(\"apikey\", %6$s);\n%2$s.setHeaders(%4$s);\n%2$s.startRequestNetwork(RequestNetworkController.GET, %5$s + \"/rest/v1/\" + %3$s + \"?\" + %1$s, %7$s, _%2$s_request_listener);",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "FSF get specific data",
    "typeName": "",
    "palette": "14",
    "type": " ",
    "spec": "FSF get specific data %s Request network %m.RequestNetwork Table name %s Hash map %m.varMap Project url %s Api Key %s Tag %s "
  },
  {
    "code": "%1$s + \"\u003deq.\" + %2$s",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "FSF column equal",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "Column key %s Column value equal %s"
  },
  {
    "code": "%1$s + \"\u003dneq.\" + %2$s",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "FSF value data not matching",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "Column key %s Column value not match %s "
  },
  {
    "code": "%1$s + \"\u003dlike.\" + %2$s",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "FSF column value contains",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "Column key %s Column value contains %s "
  },
  {
    "code": "%1$s + \"\u003dilike.*\" + %2$s + \"*\"",
    "imports": "",
    "color": "#4CAF50",
    "name": "FSS search data",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "FSS search data with column key %s Column value contains %s "
  },
  {
    "code": "%1$s + \"\u003deq.\" + %2$s + \"\u0026\"",
    "imports": "",
    "color": "#4CAF50",
    "name": "FSS search data using equal",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "FSS search data using equal - Column key %s Column value equal %s"
  },
  {
    "code": "%1$s + \"\u0026\" + %2$s",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "FSF join \u0026",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "Join %s and %s"
  },
  {
    "code": "%1$s + %2$s",
    "color": "#4CAF50",
    "name": "FSS plus",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "%s + %s"
  },
  {
    "code": "if (%1$s.equals(\"[]\")) {\r\n\t%3$s\r\n} else {\r\n\t%2$s\r\n}",
    "imports": "",
    "color": "#FF4CAF50",
    "name": "FSF data checker",
    "typeName": "",
    "palette": "14",
    "type": "e",
    "spec": "Response %s If data is available",
    "spec2": "if not available"
  },
  {
    "code": "RequestNetwork %3$s \u003d new RequestNetwork(%1$s.this);\nHashMap\u003cString, Object\u003e %5$s \u003d new HashMap\u003c\u003e();\n%5$s.put(\"apikey\", %7$s);\n%3$s.setHeaders(%5$s);\n%3$s.startRequestNetwork(RequestNetworkController.GET, \n    %6$s + \"/rest/v1/\" + %4$s + \"?\" + %2$s, %8$s, \n    new RequestNetwork.RequestListener() {\n\t        @Override\n\t        public void onResponse(String tag, String response, HashMap\u003cString, Object\u003e responseHeaders) {\n%9$s\r\n\t\t        }\n\n\t        @Override\n\t        public void onErrorResponse(String tag, String message) {\n%10$s\r\n\t\t        }\n\t    }\n);",
    "imports": "",
    "color": "#4CAF50",
    "name": "FSF filter data with direct response",
    "typeName": "",
    "palette": "14",
    "type": "e",
    "spec": "FSF filter with direct handle - Activity %m.activity get specific data %s Request network name %s.inputOnly Table name %s Hash map %m.varMap Project url %s Api Key %s Tag %s Response:",
    "spec2": "Error response"
  },
  {
    "code": "",
    "imports": "",
    "color": "#FF795548",
    "name": "FSS",
    "typeName": "",
    "palette": "14",
    "type": "h",
    "spec": "Supabase storage"
  },
  {
    "code": "OkHttpClient client \u003d new OkHttpClient();\n\nFile file \u003d new File(%1$s);\nRequestBody fileBody \u003d RequestBody.create(MediaType.parse(%3$s), file);\n\nRequest request \u003d new Request.Builder()\n    .url(%5$s + \"/storage/v1/object/\" + %4$s + \"/\" + %2$s)\n    .header(\"Authorization\", \"Bearer \" + %6$s)\n    .post(fileBody)\n    .build();\n\nclient.newCall(request).enqueue(new Callback() {\n@Override\npublic void onFailure(Call call, IOException e) {\nfinal String errorMessage \u003d e.getMessage();\nrunOnUiThread(new Runnable() {\n@Override\npublic void run() {\n%7$s\n}\n});\n}",
    "imports": "",
    "color": "#FF795548",
    "name": "FSS supabase uploder",
    "typeName": "",
    "palette": "14",
    "type": "c",
    "spec": "Supabase upload file with file path %s  file name %s  File type %s bucket name %s Project url %s Api key %s If request failed:"
  },
  {
    "code": "final float %1$s \u003d 0.90f;\nnew LinearSnapHelper().attachToRecyclerView(%2$s);\n%2$s.addOnScrollListener(new RecyclerView.OnScrollListener() {\n    @Override\n    public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {\n        super.onScrolled(recyclerView, dx, dy);\n        int recyclerCenterX \u003d recyclerView.getWidth() / 2;\n        for (int i \u003d 0; i \u003c recyclerView.getChildCount(); i++) {\n            View child \u003d recyclerView.getChildAt(i);\n            int childCenterX \u003d (child.getLeft() + child.getRight()) / 2;\n            int distanceFromCenter \u003d Math.abs(recyclerCenterX - childCenterX);\n            float scale \u003d 1 - ((float) distanceFromCenter / recyclerCenterX) * (1 - %1$s);\n            child.setScaleX(scale);\n            child.setScaleY(scale);\n        }\n    }\n});\n%2$s.setOnFlingListener(new RecyclerView.OnFlingListener() {\n    @Override\n    public boolean onFling(int velocityX, int velocityY) {\n        int adjustedVelocityX \u003d (int) (velocityX * 0.5f);\n        return %2$s.fling(adjustedVelocityX, velocityY);\n    }\n});",
    "imports": "",
    "color": "#381E72",
    "name": "RecyclerView slider animation",
    "typeName": "",
    "palette": "9",
    "type": " ",
    "spec": "RecyclerView slider animation anim id %s.inputOnly recyclerview id %m.view"
  },
  {
    "code": "if (Build.VERSION.SDK_INT \u003c\u003d Build.VERSION_CODES.%1$s) {\n%2$s\n}",
    "color": "#381E72",
    "name": "Android lower checker",
    "typeName": "",
    "palette": "9",
    "type": "c",
    "spec": "Android Running to Lower Version - Version code %s.inputOnly "
  },
  {
    "imports": "me.everything.android.ui.overscroll.OverScrollDecoratorHelper",
    "code": "OverScrollDecoratorHelper.setUpOverScroll(%1$s, OverScrollDecoratorHelper.ORIENTATION_HORIZONTAL);",
    "color": "#381E72",
    "name": "Horizontal RecyclerView Over Scroll",
    "typeName": "",
    "palette": "9",
    "type": " ",
    "spec": "Horizontal RecyclerView Over Scroll - Id %m.view"
  },
  {
    "code": "%1$s.setOnClickListener(%2$s -\u003e {\n%3$s\n\t\t        });",
    "imports": "",
    "color": "#FF006492",
    "name": "Button Click",
    "typeName": "",
    "palette": "10",
    "type": "c",
    "spec": "Bottom Sheet Button Click %m.view ClickOn %s.inputOnly "
  },
  {
    "code": "// hide code for %1$s",
    "imports": "",
    "color": "#381E72",
    "name": "hide code",
    "typeName": "",
    "palette": "9",
    "type": "c",
    "spec": "Hide code for %s"
  },
  {
    "code": "OkHttpClient client \u003d new OkHttpClient();\nRequest request \u003d new Request.Builder()\n    .url(%1$s.replace(\"public/\", \"\"))\n    .delete()\n    .header(\"Authorization\", \"Bearer \" + %2$s)\n    .build();\n\nclient.newCall(request).enqueue(new Callback() {\n@Override\npublic void onFailure(Call call, IOException e) {\nfinal String errorMessage \u003d e.getMessage();\nrunOnUiThread(new Runnable() {\n@Override\npublic void run() {\n%3$s\n}\n});\n}",
    "imports": "",
    "color": "#FF795548",
    "name": "FSS Supabase delete files",
    "typeName": "",
    "palette": "14",
    "type": "c",
    "spec": "Supabase delete file with File url %s Api key %s If request failed:"
  },
  {
    "code": "@Override\npublic void onResponse(Call call, Response response) throws IOException {\nfinal boolean isSuccessful \u003d response.isSuccessful();\nfinal String responseBody \u003d response.body().string();\nrunOnUiThread(new Runnable() {\n@Override\npublic void run() {\nif (isSuccessful) {\n%1$s\n} else {\n%2$s\n}\n}\n});\n}\n});",
    "imports": "",
    "color": "#FF795548",
    "name": "FSS Supabase callBack",
    "typeName": "",
    "palette": "14",
    "type": "e",
    "spec": "If upload successful",
    "spec2": "If upload failed"
  },
  {
    "code": "responseBody",
    "imports": "",
    "color": "#FF795548",
    "name": "FSS Supabase get response ",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "Response"
  },
  {
    "code": "%3$s + \"/storage/v1/object/public/\" + %2$s + \"/\" + %1$s",
    "imports": "",
    "color": "#FF795548",
    "name": "FSS Get supabase file link (Public)",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "Get file link with file name %s bucket name %s Project url %s"
  },
  {
    "code": "\"image/jpeg\"",
    "imports": "",
    "color": "#FF795548",
    "name": "FSS Image type",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "Image type"
  },
  {
    "code": "\"video/mp4\"",
    "imports": "",
    "color": "#FF795548",
    "name": "FSS Video type",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "Video"
  },
  {
    "imports": "",
    "code": "\"application/zip\"",
    "color": "#FF795548",
    "name": "FSS type zip",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "zip"
  },
  {
    "code": "",
    "imports": "",
    "color": "#FFFF9800",
    "name": "FSD delete data header",
    "typeName": "",
    "palette": "14",
    "type": "h",
    "spec": "FSD Supabase delete data"
  },
  {
    "code": "OkHttpClient client \u003d new OkHttpClient();\nRequest request \u003d new Request.Builder()\n    .url(%3$s + \"/rest/v1/\" + %2$s + %1$s)\n    .delete()\n    .addHeader(\"apikey\", %4$s) \n    .addHeader(\"Content-Type\", \"application/json\")\n    .build();\n\nclient.newCall(request).enqueue(new Callback() {",
    "imports": "",
    "color": "#FFFF9800",
    "name": "FSD delete data",
    "typeName": "",
    "palette": "14",
    "type": " ",
    "spec": "FSD Delete data %s Table name %s Project url %s API Key %s "
  },
  {
    "code": "@Override\npublic void onFailure(Call call, IOException e) {\nrunOnUiThread(new Runnable() {\n@Override\npublic void run() {\n%1$s\n}\n});\n}",
    "imports": "",
    "color": "#FFFF9800",
    "name": "FSD data delete request failed",
    "typeName": "",
    "palette": "14",
    "type": "c",
    "spec": "FSD If data delete request failed"
  },
  {
    "code": "\"signup\"",
    "imports": "",
    "color": "#FF9C27B0",
    "name": "FSA type signup",
    "typeName": "",
    "palette": "15",
    "type": "s",
    "spec": "Signup"
  },
  {
    "code": "\"recovery\"",
    "imports": "",
    "color": "#FF9C27B0",
    "name": "FSA type rest password",
    "typeName": "",
    "palette": "15",
    "type": "s",
    "spec": "Reset Password"
  },
  {
    "code": "@Override\npublic void onResponse(Call call, Response response) throws IOException {\nif (response.isSuccessful()) {\nrunOnUiThread(new Runnable() {\n@Override\npublic void run() {\n%1$s\n }\n});\n}\nelse {\nrunOnUiThread(new Runnable() {\n@Override\npublic void run() {\n%2$s\n}\n});\n}\n}\n});",
    "imports": "",
    "color": "#FFFF9800",
    "name": "FSD data delete response",
    "typeName": "",
    "palette": "14",
    "type": "e",
    "spec": "If delete successful",
    "spec2": "Else data delete failed"
  },
  {
    "code": "\"?\" + %1$s + \"\u003deq.\" + %2$s",
    "imports": "",
    "color": "#FFFF9800",
    "name": "FSD Set data",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "Column key %s Column value equal %s"
  },
  {
    "code": "response",
    "color": "#4CAF50",
    "name": "request network response",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "request network response"
  },
  {
    "code": "runOnUiThread(() -\u003e {\n%1$s\n});",
    "imports": "",
    "color": "#FF9800",
    "name": "runOnUiThread",
    "typeName": "",
    "palette": "11",
    "type": "c",
    "spec": "runOnUiThread"
  },
  {
    "code": "%1$s.startsWith(%2$s)",
    "imports": "",
    "color": "#381E72",
    "name": "StartWith",
    "typeName": "",
    "palette": "9",
    "type": "b",
    "spec": "%s StartWith %s"
  },
  {
    "code": "%1$s.endsWith(%2$s)",
    "imports": "",
    "color": "#381E72",
    "name": "EndsWith",
    "typeName": "",
    "palette": "9",
    "type": "b",
    "spec": "%s EndsWith %s"
  },
  {
    "code": "FasterCloudinaryUploader.uploadMedia(%1$s.this, %2$s, new FasterCloudinaryUploader.UploadCallback() {\n@Override\npublic void onSuccess(String fileUrl, String\npublicId) {\n%3$s\n}\n@Override\npublic void onFailure(String error) {\n%4$s\n}\n});",
    "imports": "",
    "color": "#607D8B",
    "name": "FasterCloudinaryUploader",
    "typeName": "",
    "palette": "12",
    "type": "e",
    "spec": "FasterCloudinaryUploader Activity %m.activity File path %s ",
    "spec2": ""
  },
  {
    "code": "FasterCloudinaryUploader.deleteByPublicId(%1$s.this, %2$s, new FasterCloudinaryUploader.UploadCallback() {\n@Override\npublic void onSuccess(String msg, String nothing) {\n%3$s\n}\n@Override\npublic void onFailure(String error) {\n%4$s\n}\n});",
    "imports": "",
    "color": "#607D8B",
    "name": "FasterCloudinaryUploader delete files",
    "typeName": "",
    "palette": "12",
    "type": "e",
    "spec": "FasterCloudinaryUploader delete files Activity %m.activity Publicid %s",
    "spec2": "else failed"
  },
  {
    "code": "fileUrl",
    "color": "#607D8B",
    "name": "FasterCloudinaryUploader fileUrl",
    "typeName": "",
    "palette": "12",
    "type": "s",
    "spec": "FasterCloudinaryUploader fileUrl"
  },
  {
    "code": "error",
    "color": "#607D8B",
    "name": "FasterCloudinaryUploader error",
    "typeName": "",
    "palette": "12",
    "type": "s",
    "spec": "FasterCloudinaryUploader error"
  },
  {
    "code": "publicId",
    "imports": "",
    "color": "#607D8B",
    "name": "FasterCloudinaryUploader public Id",
    "typeName": "",
    "palette": "12",
    "type": "s",
    "spec": "FasterCloudinaryUploader delete publicId"
  },
  {
    "code": "msg",
    "color": "#607D8B",
    "name": "FasterCloudinaryUploader delete msg",
    "typeName": "",
    "palette": "12",
    "type": "s",
    "spec": "FasterCloudinaryUploader delete msg"
  },
  {
    "code": "nothing",
    "imports": "",
    "color": "#607D8B",
    "name": "FasterCloudinaryUploader delete unused",
    "typeName": "",
    "palette": "12",
    "type": "s",
    "spec": "FasterCloudinaryUploader delete nothing massage"
  },
  {
    "code": "massage",
    "color": "#4CAF50",
    "name": "request network error massage",
    "typeName": "",
    "palette": "14",
    "type": "s",
    "spec": "request network error massage"
  },
  {
    "code": "%2$s.clear();\nfor (HashMap\u003cString, Object\u003e item : %1$s) {\n    if (%4$s.equals(String.valueOf(item.get(%3$s))) \u0026\u0026\n        %6$s.equals(String.valueOf(item.get(%5$s)))) {\n        %2$s.add(item);\n    }\n}",
    "imports": "",
    "color": "#381E72",
    "name": "Filter 2 data using list map",
    "typeName": "",
    "palette": "9",
    "type": " ",
    "spec": "Filter 2 data using list map - Data %m.listMap Filter Map %m.listMap Key %s value %s key %s value %s"
  },
  {
    "code": "}\n%1$s",
    "color": "#381E72",
    "name": "Code outside of on create",
    "typeName": "",
    "palette": "9",
    "type": "c",
    "spec": "Code outside of on create"
  },
  {
    "code": "\t/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"public class %2$s extends AppCompatActivity {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003eadd\nprivate FasterFileDownloader %1$s;\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/",
    "imports": "",
    "color": "#FF000000",
    "name": "Create private for faster downloader",
    "typeName": "",
    "palette": "13",
    "type": " ",
    "spec": "Create private for faster file downloader %s.inputOnly Activity %m.activity"
  },
  {
    "code": "%1$s \u003d new FasterFileDownloader(%2$s.this);",
    "color": "#000000",
    "name": "Call faster downloader using private",
    "typeName": "",
    "palette": "13",
    "type": " ",
    "spec": "Call faster downloader using private - name %s.inputOnly Activity %m.activity"
  },
  {
    "code": "%1$s.startDownload(%2$s, %3$s + %4$s);",
    "color": "#000000",
    "name": "Start Faster downloader",
    "typeName": "",
    "palette": "13",
    "type": " ",
    "spec": "Start Faster downloader private name %s.inputOnly File url %s File Name %s File extension %s "
  },
  {
    "code": "%1$s.setOnDownloadListener(new FasterFileDownloader.OnDownloadListener() {\n%2$s\n});",
    "imports": "",
    "color": "#000000",
    "name": "FD setOnDownloadListener",
    "typeName": "",
    "palette": "13",
    "type": "c",
    "spec": "FD setOnDownloadListener private name %s.inputOnly",
    "spec2": ""
  },
  {
    "code": "@Override\npublic void onProgress(int percent) {\n%1$s\n}\n@Override\npublic void onSuccess(String savedFilePath) {\n%2$s\n}",
    "color": "#000000",
    "name": "FD download progress and success",
    "typeName": "",
    "palette": "13",
    "type": "e",
    "spec": "FD download progress and success",
    "spec2": "File download success"
  },
  {
    "code": "@Override\npublic void onError(String reason) {\n%1$s\n}",
    "color": "#000000",
    "name": "FD onError",
    "typeName": "",
    "palette": "13",
    "type": "c",
    "spec": "FD on file download Error"
  },
  {
    "code": "percent",
    "imports": "",
    "color": "#000000",
    "name": "FD download percent",
    "typeName": "",
    "palette": "13",
    "type": "d",
    "spec": "FD download percent"
  },
  {
    "code": "savedFilePath",
    "color": "#000000",
    "name": "FD savedFilePath",
    "typeName": "",
    "palette": "13",
    "type": "s",
    "spec": "FD savedFilePath (location)"
  },
  {
    "code": "reason",
    "color": "#000000",
    "name": "FD download error reason",
    "typeName": "",
    "palette": "13",
    "type": "s",
    "spec": "FD download error reason"
  },
  {
    "code": "/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"public class %1$s extends AppCompatActivity {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003eadd\n    @Override\n    protected void attachBaseContext(Context newBase) {\n        Locale locale \u003d new Locale(\"en\");\n        Locale.setDefault(locale);\n        Configuration config \u003d new Configuration();\n        config.setLocale(locale);\n        Context context \u003d newBase.createConfigurationContext(config);\n        super.attachBaseContext(context);\n    }\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/",
    "imports": "",
    "color": "#381E72",
    "name": "forceEnglishLocale",
    "typeName": "",
    "palette": "9",
    "type": " ",
    "spec": "forceEnglishLocale activity name %m.activity"
  }
]